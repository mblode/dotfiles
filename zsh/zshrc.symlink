zmodload zsh/zprof

export DOTFILES="$HOME/dotfiles" ## Shortcut to this dotfiles path is $DOTFILES
export NOTES="$HOME/Library/Mobile Documents/27N4MQEA55~pro~writer/Documents"
export EDITOR="code"
export TERM=xterm-256color

# Starship
eval "$(starship init zsh)"

# Initialize zsh completions
# autoload -Uz compinit; compinit

# Aloxaf/fzf-tab
source $HOME/.zsh/fzf-tab/fzf-tab.plugin.zsh

# zsh-users/zsh-autosuggestions
source $HOME/.zsh/zsh-autosuggestions/zsh-autosuggestions.zsh

# zsh-users/zsh-completions
fpath+=($HOME/.zsh/zsh-completions/src $fpath)

# zsh-users/zsh-syntax-highlighting
source $HOME/.zsh/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh

# zsh-users/zsh-history-substring-search
source $HOME/.zsh/zsh-history-substring-search/zsh-history-substring-search.zsh

# Stash your environment variables in ~/.localrc. This means they'll stay out
# of your main dotfiles repository (which may be public, like this one), but
# you'll have access to them in your scripts.
if [[ -a ~/.localrc ]]
then
  source ~/.localrc
fi

# All of our zsh files
typeset -U config_files
config_files=($DOTFILES/*/*.zsh)

# Load the path files
for file in ${(M)config_files:#*/path.zsh}; do
    source "$file"
done

# Load everything but the path and completion files
for file in ${${config_files:#*/path.zsh}:#*/completion.zsh}; do
    source "$file"
done

# Load every completion after autocomplete loads
for file in ${(M)config_files:#*/completion.zsh}; do
    source "$file"
done

# asdf
. /opt/homebrew/opt/asdf/libexec/asdf.sh

bindkey '^R' history-incremental-search-backward # Perform backward search in command line history
bindkey '^S' history-incremental-search-forward  # Perform forward search in command line history
bindkey '^P' history-search-backward             # Go back/search in history (autocomplete)
bindkey '^N' history-search-forward              # Go forward/search in history (autocomplete)

# Better history
autoload -U up-line-or-beginning-search
autoload -U down-line-or-beginning-search
zle -N up-line-or-beginning-search
zle -N down-line-or-beginning-search
bindkey "^[[A" up-line-or-beginning-search # Up
bindkey "^[[B" down-line-or-beginning-search # Down

# bind UP and DOWN arrow keys (compatibility fallback)
bindkey '^[[A' history-substring-search-up
bindkey '^[[B' history-substring-search-down

# FZF
[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh
export FZF_DEFAULT_COMMAND="rg --files --hidden --fixed-strings"
export FZF_CTRL_T_COMMAND="$FZF_DEFAULT_COMMAND"
export FZF_DEFAULT_OPTS="--height 40% --layout=reverse --border"

# Zoxide
eval "$(zoxide init zsh)"

# mkcert
export NODE_EXTRA_CA_CERTS="$(mkcert -CAROOT)/rootCA.pem"

# Do not track
export DO_NOT_TRACK=1

# FZF Tabs
# disable sort when completing `git checkout`
zstyle ':completion:*:git-checkout:*' sort false
# set descriptions format to enable group support
zstyle ':completion:*:descriptions' format '[%d]'
# set list-colors to enable filename colorizing
zstyle ':completion:*' list-colors ${(s.:.)LS_COLORS}
# preview directory's content with exa when completing cd
zstyle ':fzf-tab:complete:cd:*' fzf-preview 'exa -1 --color=always $realpath'
# switch group using `,` and `.`
zstyle ':fzf-tab:*' switch-group ',' '.'

# Deno
export PATH="/Users/mblode/.deno/bin:$PATH"

# pnpm
export PNPM_HOME="/Users/mblode/Library/pnpm"
export PATH="$PNPM_HOME:$PATH"
